palette= col, color= "mode", expansion= 0)
{
source("./R/bip_edgewt.R")
if(!is.network(M)) stop("Must first initialize the network; use 'bip_init_network.R'.")
#
# Set colors for each mode to setup a palette.
col= c("A"= "grey", "P"= "gold")
pp<- ggnet2(net,
shape= "mode",                       label= T,
color= color,                        palette= palette,
size = size,                            legend.size = 9,
mode = mode,                         label.size= 4,
layout.par = NULL,                   layout.exp = expansion,
size.legend = NA,                    label.trim = FALSE,
edge.lty = "solid",                  edge.label = NULL,
edge.size= bip_edgewt(mat, 5),       edge.alpha= 0.25)
return(pp)
}
#----------------------------------------------------------------------------
pp<-bip_ggnet(nch.net, nch, mypalette= "Set1", expansion=0.1, size=0)
pp<-bip_ggnet(nch.net, nch, palette= "Set1", expansion=0.1, size=0)
pp
pp +
geom_point(aes(color = color), size = 12, color = "white") +
geom_point(aes(color = color), size = 12, alpha = 0.5) +
geom_point(aes(color = color), size = 9) +
geom_text(aes(label = toupper(substr(color, 1, 1))), color = "white", fontface = "bold") +
guides(color = FALSE)
pp +
geom_point(aes(color = color), size = 12, color = "white") +
geom_point(aes(color = color), size = 12, alpha = 0.5) +
geom_point(aes(color = color), size = 9) +
geom_text(aes(label= network.vertex.names(net)), color = "white", fontface = "bold") +
guides(color = FALSE)
bip_ggnet<- function(net, mat, mode= "fruchtermanreingold", size= 9,
palette= col, color= "mode", label= F, expansion= 0)
{
source("./R/bip_edgewt.R")
if(!is.network(M)) stop("Must first initialize the network; use 'bip_init_network.R'.")
#
# Set colors for each mode to setup a palette.
col= c("A"= "grey", "P"= "gold")
pp<- ggnet2(net,
shape= "mode",                       label= label,
color= color,                        palette= palette,
size = size,                         legend.size = 9,
mode = mode,                         label.size= 4,
layout.par = NULL,                   layout.exp = expansion,
size.legend = NA,                    label.trim = FALSE,
edge.lty = "solid",                  edge.label = NULL,
edge.size= bip_edgewt(mat, 5),       edge.alpha= 0.25)
return(pp)
}
#----------------------------------------------------------------------------
pp<-bip_ggnet(nch.net, nch, palette= "Set1", expansion=0.1, size=0)
pp +
geom_point(aes(color = color), size = 12, color = "white") +
geom_point(aes(color = color), size = 12, alpha = 0.5) +
geom_point(aes(color = color), size = 9) +
geom_text(aes(label= network.vertex.names(net)), color = "white", fontface = "bold") +
guides(color = FALSE)
pp +
geom_point(aes(color = color), size = 12, color = "white") +
geom_point(aes(color = color), size = 12, alpha = 0.5) +
geom_point(aes(color = color), size = 9) +
geom_text(aes(label= network.vertex.names(net)), color = "black") +
guides(color = FALSE)
pp<-bip_ggnet(nch.net, nch, expansion=0.1, size=9)
pp
pp<-bip_ggnet(nch.net, nch, expansion=0.1, label= T, size=9)
pp
pp<-bip_ggnet(nch.net, nch)
pp
pp$data
# Sourcing required functions and initializing the net objects.
source("./R/bip_ggnet.R")
source("./R/bip_igplot.R")
source("./R/bip_qtplot.R")
source("./R/bip_railway.R")
source("./R/vectorize.R")
source("./R/bip_edgewt.R")
bip= data.frame(P1= c(1, 12, 6, 0),
P2= c(1, 0, 4, 0),
P3= c(1, 7, 3, 12),
row.names= letters[1:4])
col= c("actor"= "grey80", "event"= "gold2")
bip.net<- network(bip,
matrix.type = "bipartite",
ignore.eval = FALSE,
names.eval = "weights")
bip_ggnet(bip.net,
color= "mode", palette = col,
label= TRUE, shape= "mode",
edge.label= "weights")
bipmat<- as.matrix(bip)
bip_ggnet(bip.net, bipmat,
color= "mode", palette = col,
label= TRUE, shape= "mode",
edge.label= "weights")
bip_ggnet(bip.net, bipmat,
color= "mode", palette = col,
label= TRUE)
# Label weights directly into edges
bip= data.frame(P1= c(1, 12, 6, 0),
P2= c(1, 0, 4, 0),
P3= c(1, 7, 3, 12),
row.names= letters[1:4])
bipmat<- as.matrix(bip)
col= c("actor"= "grey80", "event"= "gold2")
bip.net<- network(bip,
matrix.type = "bipartite",
ignore.eval = FALSE,
names.eval = "weights")
bip_ggnet(bip.net, bipmat,
color= "mode", palette = col,
label= TRUE)
# Detect and color the mode
col= c("P"= "grey80", "A"= "gold2")
ggnet2(nch.net,
color= "mode", palette= col, shape= "mode",
label= TRUE, label.size=3,
layout.exp= 0.5) +       # Using layout.exp because of long labels
theme(legend.position="none")
source('~/Documents/Working/~RCode/MyRCode/networks/bipartite_plots/R/bip_ggnet.R', echo=TRUE)
# Detect and color the mode
col= c("P"= "grey80", "A"= "gold2")
bip_ggnet(nch.net, as.matrix(nch),
color= "mode", palette= col,
label= TRUE, label.size=3,
layout.exp= 0.5) +       # Using layout.exp because of long labels
theme(legend.position="none")
source('~/Documents/Working/~RCode/MyRCode/networks/bipartite_plots/R/bip_ggnet.R', echo=TRUE)
# Detect and color the mode
col= c("P"= "grey80", "A"= "gold2")
bip_ggnet(nch.net, as.matrix(nch),
color= "mode", palette= col,
label= TRUE, label.size=3,
layout.exp= 0.5) +       # Using layout.exp because of long labels
theme(legend.position="none")
# Detect and color the mode
col= c("P"= "grey80", "A"= "gold2")
bip_ggnet(nch.net, as.matrix(nch),
color= "mode", palette= col,
label= TRUE, label.size=3,
layout.exp= 0.1) +       # Using layout.exp because of long labels
theme(legend.position="none")
# Detect and color the mode
col= c("P"= "grey80", "A"= "gold2")
bip_ggnet(nch.net, as.matrix(nch),
color= "mode", palette= col,
label= TRUE, label.size=3,
layout.exp= 0.12) +       # Using layout.exp because of long labels
theme(legend.position="none")
# Detect and color the mode
col= c("P"= "grey80", "A"= "gold2")
bip_ggnet(nch.net, as.matrix(nch),
color= "mode", palette= col,
label= TRUE, label.size=3,
layout.exp= 0.2) +       # Using layout.exp because of long labels
theme(legend.position="none")
# Label weights directly into edges
bip= data.frame(P1= c(1, 12, 6, 0),
P2= c(1, 0, 4, 0),
P3= c(1, 7, 3, 12),
row.names= letters[1:4])
bipmat<- as.matrix(bip)
col= c("actor"= "grey80", "event"= "gold2")
bip.net<- network(bip,
matrix.type = "bipartite",
ignore.eval = FALSE,
names.eval = "weights")
bip_ggnet(bip.net, bipmat,
color= "mode", palette = col,
label= TRUE)
source('~/Documents/Working/~RCode/MyRCode/networks/bipartite_plots/R/bip_ggnet.R', echo=TRUE)
bip.net<- network(bip,
matrix.type = "bipartite",
ignore.eval = FALSE,
names.eval = "weights")
bip_ggnet(bip.net, bipmat,
color= "mode", palette = col,
edge.label = "weights",
label= TRUE)
bip_ggnet(bip.net, as.matrix(bip),
color= "mode", palette = col,
edge.label = "weights",
label= TRUE)
source('~/Documents/Working/~RCode/MyRCode/networks/bipartite_plots/R/bip_ggnet.R', echo=TRUE)
bip_ggnet(bip.net, as.matrix(bip),
color= "mode", palette = col,
edge.label = "weights",
label= TRUE)
# Set colors for each mode
col= c("P"= "#FC9272", "A"= "#9ECAE1")
pp<- bip_ggnet(hr.net, size=7,
shape= "mode", #label= T,
color= "mode", palette= col,
edge.size= bip_edgewt(hr, 5),
edge.alpha= 0.25,
layout.exp= 0.25) +
geom_text(aes(label= network.vertex.names(hr.net)),
color= "black", size= 3)
# Set colors for each mode
col= c("P"= "#FC9272", "A"= "#9ECAE1")
pp<- bip_ggnet(hr.net, size=7,
shape= "mode", #label= T,
color= "mode", palette= col,
layout.exp= 0.25) +
geom_text(aes(label= network.vertex.names(hr.net)),
color= "black", size= 3)
# Set colors for each mode
col= c("P"= "#FC9272", "A"= "#9ECAE1")
pp<- bip_ggnet(hr.net, as.matrix(hr),
size=7, shape= "mode", #label= T,
color= "mode", palette= col,
layout.exp= 0.25) +
geom_text(aes(label= network.vertex.names(hr.net)),
color= "black", size= 3)
pp
# Set colors for each mode
col= c("P"= "#FC9272", "A"= "#9ECAE1")
pp<- bip_ggnet(hr.net, as.matrix(hr),
size=7, shape= "mode", #label= T,
color= "mode", palette= col,
layout.exp= 0.25) +
geom_text(aes(label= network.vertex.names(hr.net)),
color= "black", size= 3) +
theme(legend.position="none")
pp
pp1<- bip_ggnet(nch.net, as.matrix(nch),
size= 6, color= "mode", label= T, label.size=3,
palette= c("P"= "indianred3", "A"= "steelblue4"))
pp1
pp1<- bip_ggnet(nch.net, as.matrix(nch),
size= 6, color= "mode", label= T, label.size=2,
palette= c("P"= "indianred3", "A"= "steelblue4"))
pp1
pp1<- bip_ggnet(nch.net, as.matrix(nch),
size= 6, color= "mode", label= T, label.size=2,
palette= c("P"= "indianred3", "A"= "steelblue4")) +
theme(legend.position="none")           # Hide legend
pp1
pp2<- bip_ggnet(nch.net, as.matrix(nch),
size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
layout.exp= 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
geom_text(aes(label= network.vertex.names(nch.net)),
color= "black", size= 3.5) + # check_overlap= TRUE
guides(color= FALSE)
pp2
pp2<- bip_ggnet(nch.net, as.matrix(nch),
size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
layout.exp= 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
geom_text(aes(label= network.vertex.names(nch.net)),
color= "black", size= 3.5) + # check_overlap= TRUE
guides(color= FALSE) +
theme(legend.position="none")          # Hide legend
pp2
pp2<- bip_ggnet(nch.net, as.matrix(nch),
size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
layout.exp= 0.25) +
geom_point(aes(color= color), size= 8, color= "white") +
geom_point(aes(color= color), size= 8, alpha= 0.5) +
geom_point(aes(color= color), size= 6) +
geom_text(aes(label= network.vertex.names(nch.net)),
color= "black", size= 3.5) + # check_overlap= TRUE
guides(color= FALSE) +
theme(legend.position="none")          # Hide legend
pp2
nums<- as.vector(c(1:sum(dim(nch))))
pp3<- bip_ggnet(nch.net, as.matrix(nch),
size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
layout.exp = 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
geom_text(aes(label= nums),
color= "white", size= 3.5, fontface="bold") +
guides(color= FALSE)
pp3
nums<- as.vector(c(1:sum(dim(nch))))
pp3<- bip_ggnet(nch.net, as.matrix(nch),
size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
layout.exp = 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
geom_text(aes(label= nums),
color= "white", size= 3.5, fontface="bold") +
guides(color= FALSE) +
theme(legend.position="none")          # Hide legend
pp3
pp4<- ggnet2(nch.net, as.matrix(nch),
size= 7,
shape= "mode",
palette= "Set1",
color= "mode",
layout.exp = 0.25) +
guides(color= FALSE) +
# This is how the check overlap option in ggnet2 goes.
# geom_text(aes(label= network.vertex.names(nch.net)),
#         color= "black", size= 3.5) + # check_overlap= TRUE
# This uses ggrepel.
geom_text_repel(aes(label= network.vertex.names(nch.net)),
color= "black", size= 3.5)
pp4<- ggnet2(nch.net, as.matrix(nch),
size= 7,
shape= "mode",
palette= "Set1",
color= "mode",
layout.exp = 0.25) +
guides(color= FALSE) +
# This is how the check overlap option in ggnet2 goes.
# geom_text(aes(label= network.vertex.names(nch.net)),
#         color= "black", size= 3.5) + # check_overlap= TRUE
# This uses ggrepel.
geom_text_repel(aes(label= network.vertex.names(nch.net)),
color= "black", size= 3.5)
g<- bip_railway(hr, label=T)
g+ coord_flip()
# Plot layout coordinates for railway networkplot. Input is the
# adjacency matrix.
#
mymat <- read.delim("./data-raw/data.txt", row.names=1)   # Not run.
g<- bip_railway(mymat, label=T)
g+ coord_flip()
source('~/Documents/Working/~RCode/MyRCode/networks/bipartite_plots/R/bip_init_igraph.R', echo=TRUE)
is.matrix(nch)
is.matrix(hr)
nch.ig<- bip_init_igraph(as.matrix(nch))
dim(nch)[1]
dim(as.matrix(nch))[1]
hr.ig<- bip_init_igraph(hr)
?graph_from_incidence_matrix
source('~/Documents/Working/~RCode/MyRCode/networks/bipartite_plots/R/bip_init_igraph.R', echo=TRUE)
(
)
hr.ig<- bip_init_igraph(hr)
nch.ig<- bip_init_igraph(nch)
hr.net<- bip_init_network(hr)
nch.ig
# Plot layout coordinates for railway networkplot. Input is the
# adjacency matrix.
#
mymat <- read.delim("./data-raw/data.txt", row.names=1)   # Not run.
g<- bip_railway(mymat, label=T)
g+ coord_flip()
# Detect and color the mode
col= c("P"= "grey80", "A"= "gold2")
bip_ggnet(nch.net, as.matrix(nch),
color= "mode", palette= col,
label= TRUE, label.size=3,
layout.exp= 0.2) +       # Using layout.exp because of long labels
theme(legend.position="none")
bip= data.frame(P1= c(1, 12, 6, 0),
P2= c(1, 0, 4, 0),
P3= c(1, 7, 3, 12),
row.names= letters[1:4])
bipmat<- as.matrix(bip)
col= c("actor"= "grey80", "event"= "gold2")
bip.net<- network(bip,
matrix.type = "bipartite",
ignore.eval = FALSE,
names.eval = "weights")
bip_ggnet(bip.net, as.matrix(bip),
color= "mode", palette = col,
edge.label = "weights",
label= TRUE)
bip= data.frame(P1= c(1, 12, 6, 0),
P2= c(1, 0, 4, 0),
P3= c(1, 7, 3, 12),
row.names= letters[1:4])
col= c("actor"= "grey80", "event"= "gold2")
bip.net<- bip_init_network(bip,
matrix.type = "bipartite",
ignore.eval = FALSE,
names.eval = "weights")
bip= data.frame(P1= c(1, 12, 6, 0),
P2= c(1, 0, 4, 0),
P3= c(1, 7, 3, 12),
row.names= letters[1:4])
col= c("actor"= "grey80", "event"= "gold2")
bip.net<- bip_init_network(as.matrix(bip),
matrix.type = "bipartite",
ignore.eval = FALSE,
names.eval = "weights")
bip= data.frame(P1= c(1, 12, 6, 0),
P2= c(1, 0, 4, 0),
P3= c(1, 7, 3, 12),
row.names= letters[1:4])
col= c("actor"= "grey80", "event"= "gold2")
bip.net<- bip_init_network(as.matrix(bip),
matrix.type = "bipartite",
ignore.eval = FALSE,
names.eval = "weights")
bip.net<- bip_init_network(as.matrix(bip)
bip_ggnet(bip.net, as.matrix(bip),
bip.net<- bip_init_network(as.matrix(bip))
bip_ggnet(bip.net, as.matrix(bip),
color= "mode", palette = col,
edge.label = "weights",
label= TRUE)
col= c("A"= "grey80", "P"= "gold2")
bip.net<- bip_init_network(as.matrix(bip))
bip_ggnet(bip.net, as.matrix(bip),
color= "mode", palette = col,
edge.label = "weights",
label= TRUE)
bip_ggnet(bip.net, as.matrix(bip))
bip_ggnet(bip.net, as.matrix(bip),
#  color= "mode", palette = col,
edge.label = "weights")
bip_ggnet(bip.net, as.matrix(bip),
#  color= "mode", palette = col,
edge.label = "weights",
label= TRUE)
source('~/Documents/Working/~RCode/MyRCode/networks/bipartite_plots/R/bip_ggnet.R', echo=TRUE)
bip= data.frame(P1= c(1, 12, 6, 0),
P2= c(1, 0, 4, 0),
P3= c(1, 7, 3, 12),
row.names= letters[1:4])
col= c("A"= "grey80", "P"= "gold2")
bip.net<- bip_init_network(as.matrix(bip))
bip_ggnet(bip.net, as.matrix(bip),
#  color= "mode", palette = col,
edge.label = "weights",
label= TRUE)
# Set colors for each mode
col= c("P"= "#FC9272", "A"= "#9ECAE1")
pp<- bip_ggnet(hr.net, as.matrix(hr),
size=7, shape= "mode", #label= T,
color= "mode", palette= col,
layout.exp= 0.25) +
geom_text(aes(label= network.vertex.names(hr.net)),
color= "black", size= 3) +
theme(legend.position="none")                 # Hide legend
pp
nums<- as.vector(c(1:sum(dim(nch))))
pp3<- bip_ggnet(nch.net, as.matrix(nch),
size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
layout.exp = 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
geom_text(aes(label= nums),
color= "white", size= 3.5, fontface="bold") +
guides(color= FALSE) +
theme(legend.position="none")          # Hide legend
pp3
pp2<- bip_ggnet(nch.net, as.matrix(nch),
size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
layout.exp= 0.25) +
geom_point(aes(color= color), size= 8, color= "white") +
geom_point(aes(color= color), size= 8, alpha= 0.5) +
geom_point(aes(color= color), size= 6) +
geom_text(aes(label= network.vertex.names(nch.net)),
color= "black", size= 3.5) + # check_overlap= TRUE
guides(color= FALSE) +
theme(legend.position="none")          # Hide legend
pp2
# Set colors for each mode
col= c("P"= "#FC9272", "A"= "#9ECAE1")
pp<- bip_ggnet(hr.net, as.matrix(hr),
size=7, shape= "mode", #label= T,
color= "mode", palette= col,
layout.exp= 0.25) +
geom_text(aes(label= network.vertex.names(hr.net)),
color= "black", size= 3) +
theme(legend.position="none")                 # Hide legend
pp
# Plot layout coordinates for railway networkplot. Input is the
# adjacency matrix.
#
mymat <- read.delim("./data-raw/data.txt", row.names=1)   # Not run.
g<- bip_railway(mymat, label=T)
g+ coord_flip()
col= c("P"= "#FC9272", "A"= "#9ECAE1")
pp<- bip_ggnet(hr.net, as.matrix(hr),
size=7, shape= "mode", #label= T,
color= "mode", palette= col,
layout.exp= 0.25) +
geom_text(aes(label= network.vertex.names(hr.net)),
color= "black", size= 3) +
theme(legend.position="none")                 # Hide legend
pp
knit_with_parameters('~/Documents/Working/~RCode/MyRCode/networks/bipartite_plots/ggbipart.Rmd')
