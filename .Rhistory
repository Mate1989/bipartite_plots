source("./functions/bip_init_network.R")
source("./functions/bip_init_igraph.R")
nch.net <- bip_init_network(nch)
hr.net <- bip_init_network(hr)
# The Nava de las Correhuelas dataset.
nch <- read.table("./data/NCH_quant_bmatrix.txt",
header=T, sep="\t", row.names=1,
dec=",", na.strings="NA")
# The Hato Raton dataset.
hr <- read.table("./data/HR_quant_bmatrix.txt",
header=T, sep="\t", row.names=1,
dec=".", na.strings="NA")
require(network)
require(igraph)
require(sna)
require(ggplot2)
require(sna)
require(ergm)
source("./functions/bip_init_network.R")
source("./functions/bip_init_igraph.R")
nch.net <- bip_init_network(nch)
hr.net <- bip_init_network(hr)
# Sourcing required functions and initializing the net objects.
source("./functions/bip_binplot.R")
source("./functions/bip_gplot.R")
source("./functions/bip_qtplot.R")
source("./functions/vectorize.R")
nch.net <- bip_init_network(nch)
hr.net <- bip_init_network(hr)
require(network)
require(ggplot2)
require(sna)
require(ergm)
#
# Assign the matrix and the network objects here.
# mymat is a matrix with column names and row names.
# net is a network object.
# This is for the Nava de las Correhuelas network.
mymat <- nch
net <- nch.net
#
# Now we source the bip_ggplot2.R file
source("bip_ggplot2.R")
#
# We repeat for the Hato Raton network.
mymat <- hr
net <- hr.net
source("bip_ggplot2.R")
source('~/.active-rstudio-document')
mymat <- nch
net <- nch.net
#
# Now we source the bip_ggplot2.R file
source("bip_ggplot2.R")
# We repeat for the Hato Raton network.
mymat <- hr
net <- hr.net
source("bip_ggplot2.R")
citation(bipartite)
library(bipartite)
citation(bipartite)
?bipartite
require(downloader)
link = "https://raw.github.com/pedroj/bipartite_plots/master/data/NCH_quant_bmatrix.txt"
file = "data/NCH_quant_bmatrix.txt"
if(!file.exists(file)) download(link, file, mode = "wb")
M <- read.table(file, sep = "\t", dec = ",", header = TRUE, row.names = 1)
#
# Bipartite network initialization, starting from an adjacency matrix.
#
source("functions/bip_briatte.R")
net = bipartite.network(M, modes = c("one", "two"))
ggnet(net,
segment.size = edge.weights(M, 15), segment.alpha = .25,
label = TRUE, color = "black",
node.group = get.vertex.attribute(net, "mode"))
require(downloader)
# PJ example. Based on a gist by F Briatte to just feed the network data
# from its adjacency matrix to ggnet
link = "https://raw.github.com/pedroj/bipartite_plots/master/data/NCH_quant_bmatrix.txt"
file = "data/NCH_quant_bmatrix.txt"
if(!file.exists(file)) download(link, file, mode = "wb")
M <- read.table(file, sep = "\t", dec = ",", header = TRUE, row.names = 1)
#
# Bipartite network initialization, starting from an adjacency matrix.
#
source("functions/bip_briatte.R")
source_url("https://raw.github.com/briatte/ggnet/master/ggnet.R", prompt = FALSE)
#
# Pass the network, edge weights and mode to ggnet.
#
net = bipartite.network(M, modes = c("one", "two"))
ggnet(net,
segment.size = edge.weights(M, 15), segment.alpha = .25,
label = TRUE, color = "black",
node.group = get.vertex.attribute(net, "mode"))
#
require(downloader)
#
# PJ example. Based on a gist by F Briatte to just feed the network data
# from its adjacency matrix to ggnet
link = "https://raw.github.com/pedroj/bipartite_plots/master/data/NCH_quant_bmatrix.txt"
file = "data/NCH_quant_bmatrix.txt"
if(!file.exists(file)) download(link, file, mode = "wb")
M <- read.table(file, sep = "\t", dec = ",", header = TRUE, row.names = 1)
#
# Bipartite network initialization, starting from an adjacency matrix.
#
source("functions/bip_briatte.R")
source_url("https://raw.github.com/briatte/ggnet/master/ggnet.R", prompt = FALSE)
#
# Pass the network, edge weights and mode to ggnet.
#
net = bipartite.network(M, modes = c("Animals", "Plants"))
ggnet(net,
segment.size = edge.weights(M, 15), segment.alpha = .25,
label = TRUE, color = "black",
node.group = get.vertex.attribute(net, "mode"))
#.........................................................................
net = bipartite.network(M, modes = c("Animals", "Plants"))
ggnet(net,
segment.size = edge.weights(M, 15), segment.alpha = .35,
label = TRUE, color = "black",
node.group = get.vertex.attribute(net, "mode"))
bip_init_network <- function (mymat, modes = c("A", "P")) {
require(network)
if(!is.matrix(mymat)) mymat <- as.matrix(mymat)
a = dim(mymat)[1]
p = dim(mymat)[2]
net <- network.initialize(a + p,
bipartite = a, directed=FALSE)
network.bipartite(mymat, net,
names.eval=list(row.names(mymat), colnames(mymat)))
set.vertex.attribute(net,"mode",
c(rep("A",a), rep("P",p))))
}
bip_init_network <- function (mymat, modes = c("A", "P")) {
require(network)
if(!is.matrix(mymat)) mymat <- as.matrix(mymat)
a = dim(mymat)[1]
p = dim(mymat)[2]
net <- network.initialize(a + p,
bipartite = a, directed=FALSE)
network.bipartite(mymat, net,
names.eval=list(row.names(mymat), colnames(mymat)))
set.vertex.attribute(net,"mode",
c(rep("A",a), rep("P",p)))
}
bip_init_network(nch)
plot(bip_init_network(nch))
