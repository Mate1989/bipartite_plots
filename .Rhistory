color= rep(c("tomato", "steelblue"), color= "mode"))
ggnet2(nch.net, size = 6, color= "mode",
palette= c("tomato", "steelblue"))
ggnet2(nch.net, size = 6, color= "mode",
palette= c("indianred3", "steelblue4"))
ggnet2(nch.net, size = 6, color= "mode",
palette= c("actor"= "indianred3", "event"= "steelblue4"))
ggnet2(nch.net, size = 6, color= "mode",
palette= c("actor"= "indianred3", "event"= "steelblue4"))
ggnet2(nch.net, size = 6, color= "mode", label= T,
palette= c("actor"= "indianred3", "event"= "steelblue4"))
#----------------------------------------------------------------------------
# Plotting bipartite networks from adjacency matrix of two-mode network.
# Using ggnet.
# DATE: 15Jul2013. Updated to ggnet 11/11/2016.
#
#----------------------------------------------------------------------------
#
require(ggnet)
source("./R/bip_edgewt.R")
#
test.net<- bip_init_network(mymat)
mynet<-nch.net
if(!is.network(mymat)) stop("Must first initialize the network; use 'bip_init_network.R'.")
#----------------------------------------------------------------------------
# Plotting bipartite networks from adjacency matrix of two-mode network.
# Using ggnet.
# DATE: 15Jul2013. Updated to ggnet 11/11/2016.
#
#----------------------------------------------------------------------------
#
require(ggnet)
source("./R/bip_edgewt.R")
#
test.net<- bip_init_network(mymat)
mynet<-nch.net
if(!is.network(nch.net)) stop("Must first initialize the network; use 'bip_init_network.R'.")
#
# To use the mode of the nodes as the basis for their colors, all the user
# has to do is to pass the color= "mode" argument, and then to style the
# "actor" and "event" values:
#
# Set colors for each mode
col = c("actor"= "#FC9272", "event"= "#9ECAE1")
pp<- ggnet2(nch.net, size=7,
shape= "mode", #label= T,
color= "mode", palette= col,
edge.size= bip_edgewt(nch, 5),
edge.alpha= 0.25,
layout.exp = 0.25) +
geom_text(aes(label= network.vertex.names(nch.net)),
color= "black", size= 3)
# Antother alternative is to pass the node colors directly, with a vector
# of node colors that has exactly the same length as the number of nodes
# in the network:
pp<- ggnet2(nch.net, size = 6, color= "mode", label= T,
palette= c("actor"= "indianred3", "event"= "steelblue4"))
pp<- ggnet2(nch.net, size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
edge.size= bip_edgewt(nch, 7.5),
edge.alpha= 0.25,
layout.exp = 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
geom_text(aes(label= network.vertex.names(nch.net)),
color= "black", size= 3.5) + # check_overlap= TRUE
guides(color= FALSE)
nums<- as.vector(c(1:sum(dim(nch))))
pp<- ggnet2(nch.net, size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
edge.size= bip_edgewt(nch, 7.5),
edge.alpha= 0.5,
layout.exp = 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
geom_text(aes(label= nums),
color= "white", size= 3.5, fontface="bold") +
guides(color= FALSE)
pp<- ggnet2(nch.net, size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
edge.size= bip_edgewt(nch, 7.5),
edge.alpha= 0.25,
layout.exp = 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
#   geom_text(aes(label= network.vertex.names(nch.net)),
#             color= "black", size= 3.5) + # check_overlap= TRUE
guides(color= FALSE) +
geom_text_repel(aes(label= network.vertex.names(nch.net)))
# Detect and color the mode
ggnet2(mynet, color= "mode", palette= col, label = TRUE)
# Label weights directly into edges
ggnet2(bip,
color= "mode", palette = col,
label = TRUE, shape= "mode",
edge.label = "weights")
#----------------------------------------------------------------------------
ggnet2(mynet, color= "mode", palette= col, label = TRUE)
col= c("actor"= "grey40", "event"= "gold3")
ggnet2(mynet, color= "mode", palette= col, label = TRUE)
col= c("actor"= "grey40", "event"= "gold3")
ggnet2(mynet, color= "mode", palette= col, label = TRUE, label.size=9)
ggnet2(mynet, color= "mode", palette= col, label = TRUE, label.size=0.75)
ggnet2(mynet, color= "mode", palette= col, label = TRUE, label.size=2)
col= c("actor"= "grey40", "event"= "gold3")
ggnet2(mynet, color= "mode", palette= col, label = TRUE, label.size=4)
# Label weights directly into edges
ggnet2(bip,
color= "mode", palette = col,
label = TRUE, shape= "mode",
edge.label = "weights")
col= c("actor"= "grey10", "event"= "gold2")
ggnet2(mynet, color= "mode", palette= col, label = TRUE, label.size=3)
col= c("actor"= "grey80", "event"= "gold2")
ggnet2(mynet, color= "mode", palette= col, label = TRUE, label.size=3)
col= c("actor"= "grey80", "event"= "gold2")
ggnet2(mynet,
color= "mode", palette= col,
label = TRUE, label.size=3,
layout.exp = 0.25)
library(ggnetwork)
library(network)
x <- matrix(rgamma(8*8, shape = 1), nrow = 8, ncol = 8);
bip <- network::network(x, matrix.type = "bipartite");
n <- ggnetwork(bip)
p <- ggplot(n)
print(p)
bip<- bip_init_network(x)
bip
n <- ggnetwork(bip)
p <- ggplot(n)
n
print(p)
x
bip <- network::network(x, matrix.type = "bipartite");
bip
p
col= c("actor"= "grey80", "event"= "gold2")
ggnet2(bip,
color= "mode", palette= col,
label = TRUE, label.size=3,
layout.exp = 0.25)        # Using layout.exp because of long labels
bip<- bip_init_network(x)
ggnet2(bip,
color= "mode", palette= col,
label = TRUE, label.size=3,
layout.exp = 0.25)        # Using layout.exp because of long labels
ggnet2
bip
x
x <- if(x< 0.25) 0
net = rgraph(10, mode = "graph", tprob = 0.5)
net
?if
)
x[x < 0.25] <- 0
bip <- network::network(x, matrix.type = "bipartite");
x
x <- matrix(rgamma(8*8, shape = 1), nrow = 8, ncol = 8);
x
x[x < 0.25] <- 0
x
bip <- network::network(x, matrix.type = "bipartite");
n <- ggnetwork(bip)
p <- ggplot(n)
bip <- network::network(x, matrix.type = "bipartite");
ggnet2(bip,
color= "mode", palette= col,
label = TRUE, label.size=3,
layout.exp = 0.25)        # Using layout.exp because of long labels
dim(x)
bip= data.frame(P1= c(1, 12, 6, 0),
P2= c(1, 0, 4, 0),
P3= c(1, 7, 3, 12),
P4= c(0, 8, 3, 5),
row.names= letters[1:4])
x= data.frame(P1= c(1, 12, 6, 0),
P2= c(1, 0, 4, 0),
P3= c(1, 7, 3, 12),
P4= c(0, 8, 3, 5),
row.names= letters[1:4])
bip <- network::network(x, matrix.type = "bipartite");
n <- ggnetwork(bip)
p <- ggplot(n)
print(p)
col= c("actor"= "grey80", "event"= "gold2")
ggnet2(bip,
color= "mode", palette= col,
label = TRUE, label.size=3,
layout.exp = 0.25)        # Using layout.exp because of long labels
p<- ggnet2(nch.net,
shape= "mode", label= T,
color= "mode", palette= col,
edge.size= bip_edgewt(nch, 5), edge.alpha= 0.25)
p
bip= data.frame(P1= c(1, 12, 6, 0),
P2= c(1, 0, 4, 0),
P3= c(1, 7, 3, 12),
P3= c(0, 10, 6, 2),
row.names= letters[1:4])
bip
bip= data.frame(P1= c(1, 12, 6, 0),
P2= c(1, 0, 4, 0),
P3= c(1, 7, 3, 12),
P4= c(0, 10, 6, 2),
row.names= letters[1:4])
bip
bip <- network::network(x, matrix.type = "bipartite"); p <- ggnet2(bip); print(p)
nch<- read.table("./data-raw/w96_adj_fru.csv",
header=T, sep=",", row.names=1,
dec=".", na.strings="NA")
nch_attr<- read.table("./data-raw/w96_node_attributes.csv",
header=T, sep=",",
dec=".", na.strings="NA")
nch.net<- bip_init_network(nch)
nch.ig<- bip_init_igraph(nch)
hr.net<- bip_init_network(hr)
names(nch_attr)
mynet<- nch.net
nch.net<- bip_init_network(nch)
nch.net %v% "Fam"= nch_attr$family
nch.net %v% "Gen"= nch_attr$genus
nch.net %v% "BM"= nch_attr$w
nch.net %v% "FrDiam"= nch_attr$g
nch_attr$family
str(nch_attr)
nch_attr<- read.table("./data-raw/w96_node_attributes.csv",
header=T, sep=",",
dec=".", na.strings="NA")
str(nch_attr)
nch
nch.net %v% "Fam"= nch_attr$family
nch.net %v% "Gen"= nch_attr$genus
nch.net %v% "BM"= nch_attr$w
nch.net %v% "FrDiam"= nch_attr$g
list.vertex.names(nch.net)
glimpse(nch_attr)
table(nch_attr$genus)
table(nch_attr$family)
dim(nch.attr)
dim(nch_attr)
nch.net
require(ggplot2)
require(network)
require(igraph)
require(sna)
require(ggnet)
require(ggrepel)
require(ergm)
require(intergraph)
require(RColorBrewer)
nch<- read.table("./data-raw/w96_adj_fru.csv",
header=T, sep=",", row.names=1,
dec=".", na.strings="NA")
nch_attr<- read.table("./data-raw/w96_node_attributes.csv",
header=T, sep=",",
dec=".", na.strings="NA")
glimpse(nch_attr)
source("./R/bip_init_network.R")
source("./R/bip_init_igraph.R")
nch.net<- bip_init_network(nch)
nch.ig<- bip_init_igraph(nch)
hr.net<- bip_init_network(hr)
# Sourcing required functions and initializing the net objects.
source("./R/bip_igplot.R")
source("./R/bip_qtplot.R")
source("./R/bip_railway.R")
source("./R/vectorize.R")
source("./R/bip_edgewt.R")
mynet<- nch.net
list.vertex.attributes(nch.net)
network::list.vertex.attributes(nch.net)
network::list.vertex.names(nch.net)
list.vertex.names(nch.net)
network::vertex.names(nch.net)
?network
network.vertex.names(nch.net)
nch<- read.table("./data-raw/w96_adj_fru.csv",
header=T, sep=",", row.names=1,
dec=".", na.strings="NA")
nch_attr<- read.table("./data-raw/w96_node_attributes.csv",
header=T, sep=",",
dec=".", na.strings="NA")
hr<- read.table("./data-raw/w97.csv",
header=T, sep=",", row.names=1,
dec=".", na.strings="NA")
nch_attr<- read.table("./data-raw/w96_node_attributes.csv",
header=T, sep=",",
dec=".", na.strings="NA")
nch_attr<- read.table("./data-raw/w96_node_attributes.csv",
header=T, sep=",",
dec=".", na.strings="NA")
hr<- read.table("./data-raw/w97.csv",
header=T, sep=",", row.names=1,
dec=".", na.strings="NA")
hr_A<- read.table("./data-raw/w97_animal.csv",
header=T, sep=",",
dec=".", na.strings="NA")
hr_P<- read.table("./data-raw/w97_plant.csv",
header=T, sep=",",
dec=".", na.strings="NA")
glimpse(nch_attr)
nch.net %v% "Fam"= nch_attr$family
nch.net
table(nch_attr$family)
nch_attr$family
nch.net %v% "Gen"= nch_attr$genus
str(nch_attr)
Fam<-  as.character(nch_attr$family)
Fam
nch.net %v% "Fam"= Fam
Gen<- as.character(nch_attr$genus)
nch.net %v% "Gen"= Gen
nch.net %v% "BM"= nch_attr$w
nch.net %v% "FrDiam"= nch_attr$g
ggnet2(mynet,
color= "mode", palette= col,
label= TRUE, label.size=3,
layout.exp= 0.25)        # Using layout.exp because of long labels
mynet
mynet$mode
mynet$modes
names(mynet)
str(mynet)
ggnet2(mynet,
color= "mode", palette= col, sahpe= "mode",
label= TRUE, label.size=3,
layout.exp= 0.25)        # Using layout.exp because of long labels
ggnet2(mynet,
color= "mode", palette= col, shape= "mode",
label= TRUE, label.size=3,
layout.exp= 0.25)        # Using layout.exp because of long labels
pp1<- ggnet2(nch.net, size= 6, color= "mode", label= T, label.size=3,
palette= c("actor"= "indianred3", "event"= "steelblue4"))
pp1
pp2<- ggnet2(nch.net, size= 0,
shape= "Fam",
palette= "Set1",
color= "mode",
edge.size= bip_edgewt(nch, 7.5),
edge.alpha= 0.25,
layout.exp= 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
geom_text(aes(label= network.vertex.names(nch.net)),
color= "black", size= 3.5) + # check_overlap= TRUE
guides(color= FALSE)
pp2
pp2<- ggnet2(nch.net, size= 0,
shape= "mode",
palette= "Set1",
color= "Fam",
edge.size= bip_edgewt(nch, 7.5),
edge.alpha= 0.25,
layout.exp= 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
geom_text(aes(label= network.vertex.names(nch.net)),
color= "black", size= 3.5) + # check_overlap= TRUE
guides(color= FALSE)
ColorBrewer
Fam
pp2<- ggnet2(nch.net, size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
edge.size= bip_edgewt(nch, 7.5),
edge.alpha= 0.25,
layout.exp= 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
geom_text(aes(label= network.vertex.names(nch.net)),
color= "black", size= 3.5) + # check_overlap= TRUE
guides(color= FALSE)
pp2
hr<- read.table("./data-raw/w97_adj_fru.csv",
header=T, sep=",", row.names=1,
dec=".", na.strings="NA")
hr<- read.table("./data-raw/w97_adj_fru.csv",
header=T, sep=",", row.names=1,
dec=".", na.strings="NA")
hr_attr<- read.table("./data-raw/w97_node_attributes.csv",
header=T, sep=",",
dec=".", na.strings="NA")
source('~/Documents/Working/~RCode/MyRCode/networks/bipartite_plots/R/bip_init_network.R', echo=TRUE)
bip_init_network(nch)
nch
pp<-bip_init_network(nch)
pp
get.node.attr(pp)
get.node.attr(pp,all())
get.node.attr(pp,all)
summary(pp)
network::list.vertex.attributes(pp)
list.vertex.attributes(pp)
list.vertex.names(pp)
network::list.vertex.names(pp)
network.vertex.names(pp)
source('~/Documents/Working/~RCode/MyRCode/networks/bipartite_plots/R/bip_init_network.R', echo=TRUE)
pp<-bip_init_network(nch)
pp
network.summary(pp)
network::summary(pp)
summary(pp)
set.vertex.attribute(pp, modes, c("A", "P"), v=seq_len(network.size(pp)))
network::set.vertex.attribute(pp, modes, c("A", "P"), v=seq_len(network.size(pp)))
network::set.vertex.attribute(pp, mode, c("A", "P"), v=seq_len(network.size(pp)))
seq_len(network.size(pp))
network::set.vertex.attribute(pp, mode, c(rep("A",a), rep("P",p)), v=seq_len(network.size(pp)))
dim(mymat)
mymat
a<- dim(mymat)[1]    # Animals are rows
p<- dim(mymat)[2]    # Plants are columns
network::set.vertex.attribute(mymat, mode, c(rep("A",a), rep("P",p)), v=seq_len(network.size(mymat)))
bip_init_network(mymat)
pp<-bip_init_network(mymat)
network::set.vertex.attribute(pp, mode, c(rep("A",a), rep("P",p)), v=seq_len(network.size(pp)))
pp%v%"modes" <- c(rep("A",a), rep("P",p))
summary(pp)
source('~/Documents/Working/~RCode/MyRCode/networks/bipartite_plots/R/bip_init_network.R', echo=TRUE)
mymat
pp<-bip_init_network(mymat, mode1="Animals", mode2="Plants")
pp
str(pp)
source('~/Documents/Working/~RCode/MyRCode/networks/bipartite_plots/R/bip_init_network.R', echo=TRUE)
pp<-bip_init_network(mymat, mode1="Animals", mode2="Plants")
pp
net%v%"modes"
source('~/Documents/Working/~RCode/MyRCode/networks/bipartite_plots/R/bip_init_network.R', echo=TRUE)
rm(pp)
pp<- bip_init_network(mymat, mode1="Animals", mode2="Plants")
source('~/Documents/Working/~RCode/MyRCode/networks/bipartite_plots/R/bip_init_network.R', echo=TRUE)
pp<- bip_init_network(mymat, mode1="Animals", mode2="Plants")
source('~/Documents/Working/~RCode/MyRCode/networks/bipartite_plots/R/bip_init_network.R', echo=TRUE)
pp<- bip_init_network(mymat, mode1="Animals", mode2="Plants")
set.vertex.attribute(net,"modes",c(rep(mode1,a), rep(mode2,p)))
set.vertex.attribute(pp,"modes",c(rep(mode1,a), rep(mode2,p)))
source('~/Documents/Working/~RCode/MyRCode/networks/bipartite_plots/R/bip_init_network.R', echo=TRUE)
pp<- bip_init_network(mymat, mode1="Animals", mode2="Plants")
summary(pp)
plot(pp)
p<- ggnet2(pp,
shape= "mode", label= T,
color= "mode", palette= col,
edge.size= bip_edgewt(nch, 5), edge.alpha= 0.25)
p<- ggnet2(pp,
shape= "mode", label= T,
color= "mode", palette= col,
edge.size= bip_edgewt(mymat, 5), edge.alpha= 0.25)
p
source('~/Documents/Working/~RCode/MyRCode/networks/bipartite_plots/R/bip_init_network.R', echo=TRUE)
summary(pp)
pp<- bip_init_network(mymat, mode1="Animals", mode2="Plants")
summary(pp)
p<- ggnet2(pp,
shape= "mode", label= T,
color= "mode", palette= col,
edge.size= bip_edgewt(mymat, 5), edge.alpha= 0.25)
col= c("Plants"= "grey", "Animals"= "gold")
p<- ggnet2(pp,
shape= "mode", label= T,
color= "mode", palette= col,
edge.size= bip_edgewt(mymat, 5), edge.alpha= 0.25)
p
ggnet2(pp,
# shape= "mode",
label= T,
color= "mode",
palette= col,
edge.size= bip_edgewt(mymat, 5), edge.alpha= 0.25)
nch.net<- bip_init_network(nch)
nch.ig<- bip_init_igraph(nch)
hr.net<- bip_init_network(hr)
hr.net
source("./R/bip_init_network.R")
source("./R/bip_init_igraph.R")
nch.net<- bip_init_network(nch)
nch.ig<- bip_init_igraph(nch)
hr.net<- bip_init_network(hr)
hr.ig<- bip_init_igraph(hr)
hr.net
summary(hr.net)
mynet
nch.net
col= c("A"= "grey80", "P"= "gold2")
ggnet2(nch.net,
color= "mode", palette= col, shape= "mode",
label= TRUE, label.size=3,
layout.exp= 0.25)        # Using layout.exp because of long labels
pp<- ggnet2(hr.net, size=7,
shape= "mode", #label= T,
color= "mode", palette= col,
edge.size= bip_edgewt(hr, 5),
edge.alpha= 0.25,
layout.exp= 0.25) +
geom_text(aes(label= network.vertex.names(hr.net)),
color= "black", size= 3)
pp
bip.net
source('~/Documents/Working/~RCode/MyRCode/networks/bipartite_plots/R/bip_init_network.R', echo=TRUE)
