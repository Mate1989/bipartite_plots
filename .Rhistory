?split.POSIX
?split
?subbars
?sub
pp<- sub("^.{1}",tt)
pp<- sub(pattern="^.{1}" ,tt)
pp<- sub(pattern="^.{1}", tt, value= TRUE)
pp<- sub(pattern="^.{1}", tt)
pp<- sub('^.{1}', tt)
tt<-network.vertex.names(nch.net)
pp<- sub('^.{1}', tt)
pp<- sub(grep('^.{1}'), tt)
pp<- sub(grep('^.{1}'),'^.{1}', tt)
pp<- sub(grep('^.{1}',tt),'^.{1}', tt)
pp
pp<- sub(grep('^{1}',tt),'^.{1}', tt)
pp
p<- ggnet2(nch.net,
shape= "mode", #label= T,
color= "mode", palette= col,
edge.size= bip_edgewt(nch, 5),
edge.alpha= 0.25,
layout.exp = 0.25) +
geom_text(aes(label= network.vertex.names(nch.net)),
color= "black", size= 3)
p
pp<- ggnet2(nch.net,
shape= "mode", #label= T,
color= "mode", palette= col,
edge.size= bip_edgewt(nch, 5),
edge.alpha= 0.25,
layout.exp = 0.25) +
geom_text(aes(label= network.vertex.names(nch.net)),
color= "black", size= 3)
pp
pp<- ggnet2(nch.net, size=6,
shape= "mode", #label= T,
color= "mode", palette= col,
edge.size= bip_edgewt(nch, 5),
edge.alpha= 0.25,
layout.exp = 0.25) +
geom_text(aes(label= network.vertex.names(nch.net)),
color= "black", size= 3)
pp
pp<- ggnet2(nch.net, size=7,
shape= "mode", #label= T,
color= "mode", palette= col,
edge.size= bip_edgewt(nch, 5),
edge.alpha= 0.25,
layout.exp = 0.25) +
geom_text(aes(label= network.vertex.names(nch.net)),
color= "black", size= 3)
pp
p<- ggnet2(nch.net, size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
edge.size= bip_edgewt(nch, 7.5),
edge.alpha= 0.25,
layout.exp = 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
geom_text(aes(label= network.vertex.names(nch.net)),
color= "black", size= 3.5) + # check_overlap= TRUE
guides(color= FALSE)
pp<- ggnet2(nch.net, size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
edge.size= bip_edgewt(nch, 7.5),
edge.alpha= 0.25,
layout.exp = 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
geom_text(aes(label= network.vertex.names(nch.net)),
color= "black", size= 3.5) + # check_overlap= TRUE
guides(color= FALSE)
rm(p)
pp
aes(
wt, mpg,
color = factor(cyl),
label = rownames(mtcars),
# Cars with 4 cylinders are rotated 90 degrees.
angle = ifelse(mtcars$cyl == 4, 90, 0)
),
pp
aes(nch.net,
label= network.vertex.names(nch.net)))
aes(
wt, mpg,
color = factor(cyl),
label = rownames(mtcars),
# Cars with 4 cylinders are rotated 90 degrees.
angle = ifelse(mtcars$cyl == 4, 90, 0)
),
pp +
geom_text_repel(aes(nch.net,
label= network.vertex.names(nch.net)))
aes(
wt, mpg,
color = factor(cyl),
label = rownames(mtcars),
# Cars with 4 cylinders are rotated 90 degrees.
angle = ifelse(mtcars$cyl == 4, 90, 0)
),
library(ggrepel)
pp +
geom_text_repel(aes(nch.net,
label= network.vertex.names(nch.net)))
length(nch.net)
pp<- ggnet2(nch.net, size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
edge.size= bip_edgewt(nch, 7.5),
edge.alpha= 0.25,
layout.exp = 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
geom_text(aes(label= network.vertex.names(nch.net)),
color= "black", size= 3.5) + # check_overlap= TRUE
guides(color= FALSE) +
geom_text_repel(aes(label= network.vertex.names(nch.net)))
pp
pp<- ggnet2(nch.net, size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
edge.size= bip_edgewt(nch, 7.5),
edge.alpha= 0.25,
layout.exp = 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
#   geom_text(aes(label= network.vertex.names(nch.net)),
#             color= "black", size= 3.5) + # check_overlap= TRUE
guides(color= FALSE) +
geom_text_repel(aes(label= network.vertex.names(nch.net)))
pp
pp<- ggnet2(nch.net, size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
edge.size= bip_edgewt(nch, 7.5),
edge.alpha= 0.25,
layout.exp = 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
geom_text(aes(label= network.vertex.names(nch.net)),
color= "black", size= 3.5) + # check_overlap= TRUE
guides(color= FALSE)
pp
dim(nch)
length(nch)
?length
lengths(nch)
dim(nch)
sum(dim(nch))
pp<- ggnet2(nch.net, size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
edge.size= bip_edgewt(nch, 7.5),
edge.alpha= 0.25,
layout.exp = 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
geom_text(aes(label= c(1:sum(dim(nch))))),
pp<- ggnet2(nch.net, size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
edge.size= bip_edgewt(nch, 7.5),
edge.alpha= 0.25,
layout.exp = 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
geom_text(aes(label= c(1:sum(dim(nch))),
color= "black", size= 3.5)) + # check_overlap= TRUE
guides(color= FALSE)
pp
1:sum(dim(nch))
nums<- as.vector(c(1:sum(dim(nch)))
pp<- ggnet2(nch.net, size= 0,
nums<- as.vector(c(1:sum(dim(nch))))
pp<- ggnet2(nch.net, size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
edge.size= bip_edgewt(nch, 7.5),
edge.alpha= 0.25,
layout.exp = 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
geom_text(aes(label= nums),
color= "black", size= 3.5) + # check_overlap= TRUE
guides(color= FALSE)
pp
pp<- ggnet2(nch.net, size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
edge.size= bip_edgewt(nch, 7.5),
edge.alpha= 0.25,
layout.exp = 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
geom_text(aes(label= nums),
color= "white", size= 3.5, fontface="bold") +
guides(color= FALSE)
pp
pp<- ggnet2(nch.net, size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
edge.size= bip_edgewt(nch, 7.5),
edge.alpha= 0.5,
layout.exp = 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
geom_text(aes(label= nums),
color= "white", size= 3.5, fontface="bold") +
guides(color= FALSE)
pp
pp<- ggnet2(nch.net, size=7,
shape= "mode", #label= T,
color= "mode", palette= col,
edge.size= bip_edgewt(nch, 5),
edge.alpha= 0.25,
layout.exp = 0.25) +
geom_text(aes(label= network.vertex.names(nch.net)),
color= "black", size= 3)
pp
pp<- ggnet2(nch.net, size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
edge.size= bip_edgewt(nch, 7.5),
edge.alpha= 0.25,
layout.exp = 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
geom_text(aes(label= network.vertex.names(nch.net)),
color= "black", size= 3.5) + # check_overlap= TRUE
guides(color= FALSE)
pp
pp<- ggnet2(nch.net, size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
edge.size= bip_edgewt(nch, 7.5),
edge.alpha= 0.25,
layout.exp = 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
#   geom_text(aes(label= network.vertex.names(nch.net)),
#             color= "black", size= 3.5) + # check_overlap= TRUE
guides(color= FALSE) +
geom_text_repel(aes(label= network.vertex.names(nch.net)))
pp
suggests(intergraph)
suggest(intergraph)
ggnet2(bip,
color= "mode", palette = col,
label = TRUE, shape= "mode",
edge.label = "weights")
ggnet2(mynet, color= "mode", palette= col, label = TRUE)
dev.off()
bip_gplot(mymat)
bip_gplot(mymat,g)
bip_gplot(mymat, test.ig)
dim(network.vertex.names(nch.net))
length(network.vertex.names(nch.net))
ggnet2(nch.net, size = 6,
color = rep(c("tomato", "steelblue"),
length(network.vertex.names(nch.net))))
ggnet2(nch.net, size = 6,
color = rep(c("tomato", "steelblue"),
length(network.vertex.names(nch.net))))
ggnet2(nch.net, size = 6,
color= rep(c("tomato", "steelblue"), color= "mode",
length(network.vertex.names(nch.net))))
ggnet2(nch.net, size = 6,
color= rep(c("tomato", "steelblue"), color= "mode"))
ggnet2(nch.net, size = 6, color= "mode",
palette= c("tomato", "steelblue"))
ggnet2(nch.net, size = 6, color= "mode",
palette= c("indianred3", "steelblue4"))
ggnet2(nch.net, size = 6, color= "mode",
palette= c("actor"= "indianred3", "event"= "steelblue4"))
ggnet2(nch.net, size = 6, color= "mode",
palette= c("actor"= "indianred3", "event"= "steelblue4"))
ggnet2(nch.net, size = 6, color= "mode", label= T,
palette= c("actor"= "indianred3", "event"= "steelblue4"))
#----------------------------------------------------------------------------
# Plotting bipartite networks from adjacency matrix of two-mode network.
# Using ggnet.
# DATE: 15Jul2013. Updated to ggnet 11/11/2016.
#
#----------------------------------------------------------------------------
#
require(ggnet)
source("./R/bip_edgewt.R")
#
test.net<- bip_init_network(mymat)
mynet<-nch.net
if(!is.network(mymat)) stop("Must first initialize the network; use 'bip_init_network.R'.")
#----------------------------------------------------------------------------
# Plotting bipartite networks from adjacency matrix of two-mode network.
# Using ggnet.
# DATE: 15Jul2013. Updated to ggnet 11/11/2016.
#
#----------------------------------------------------------------------------
#
require(ggnet)
source("./R/bip_edgewt.R")
#
test.net<- bip_init_network(mymat)
mynet<-nch.net
if(!is.network(nch.net)) stop("Must first initialize the network; use 'bip_init_network.R'.")
#
# To use the mode of the nodes as the basis for their colors, all the user
# has to do is to pass the color= "mode" argument, and then to style the
# "actor" and "event" values:
#
# Set colors for each mode
col = c("actor"= "#FC9272", "event"= "#9ECAE1")
pp<- ggnet2(nch.net, size=7,
shape= "mode", #label= T,
color= "mode", palette= col,
edge.size= bip_edgewt(nch, 5),
edge.alpha= 0.25,
layout.exp = 0.25) +
geom_text(aes(label= network.vertex.names(nch.net)),
color= "black", size= 3)
# Antother alternative is to pass the node colors directly, with a vector
# of node colors that has exactly the same length as the number of nodes
# in the network:
pp<- ggnet2(nch.net, size = 6, color= "mode", label= T,
palette= c("actor"= "indianred3", "event"= "steelblue4"))
pp<- ggnet2(nch.net, size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
edge.size= bip_edgewt(nch, 7.5),
edge.alpha= 0.25,
layout.exp = 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
geom_text(aes(label= network.vertex.names(nch.net)),
color= "black", size= 3.5) + # check_overlap= TRUE
guides(color= FALSE)
nums<- as.vector(c(1:sum(dim(nch))))
pp<- ggnet2(nch.net, size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
edge.size= bip_edgewt(nch, 7.5),
edge.alpha= 0.5,
layout.exp = 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
geom_text(aes(label= nums),
color= "white", size= 3.5, fontface="bold") +
guides(color= FALSE)
pp<- ggnet2(nch.net, size= 0,
shape= "mode",
palette= "Set1",
color= "mode",
edge.size= bip_edgewt(nch, 7.5),
edge.alpha= 0.25,
layout.exp = 0.25) +
geom_point(aes(color= color), size= 10, color= "white") +
geom_point(aes(color= color), size= 10, alpha= 0.5) +
geom_point(aes(color= color), size= 8) +
#   geom_text(aes(label= network.vertex.names(nch.net)),
#             color= "black", size= 3.5) + # check_overlap= TRUE
guides(color= FALSE) +
geom_text_repel(aes(label= network.vertex.names(nch.net)))
# Detect and color the mode
ggnet2(mynet, color= "mode", palette= col, label = TRUE)
# Label weights directly into edges
ggnet2(bip,
color= "mode", palette = col,
label = TRUE, shape= "mode",
edge.label = "weights")
#----------------------------------------------------------------------------
ggnet2(mynet, color= "mode", palette= col, label = TRUE)
col= c("actor"= "grey40", "event"= "gold3")
ggnet2(mynet, color= "mode", palette= col, label = TRUE)
col= c("actor"= "grey40", "event"= "gold3")
ggnet2(mynet, color= "mode", palette= col, label = TRUE, label.size=9)
ggnet2(mynet, color= "mode", palette= col, label = TRUE, label.size=0.75)
ggnet2(mynet, color= "mode", palette= col, label = TRUE, label.size=2)
col= c("actor"= "grey40", "event"= "gold3")
ggnet2(mynet, color= "mode", palette= col, label = TRUE, label.size=4)
# Label weights directly into edges
ggnet2(bip,
color= "mode", palette = col,
label = TRUE, shape= "mode",
edge.label = "weights")
col= c("actor"= "grey10", "event"= "gold2")
ggnet2(mynet, color= "mode", palette= col, label = TRUE, label.size=3)
col= c("actor"= "grey80", "event"= "gold2")
ggnet2(mynet, color= "mode", palette= col, label = TRUE, label.size=3)
col= c("actor"= "grey80", "event"= "gold2")
ggnet2(mynet,
color= "mode", palette= col,
label = TRUE, label.size=3,
layout.exp = 0.25)
library(ggnetwork)
library(network)
x <- matrix(rgamma(8*8, shape = 1), nrow = 8, ncol = 8);
bip <- network::network(x, matrix.type = "bipartite");
n <- ggnetwork(bip)
p <- ggplot(n)
print(p)
bip<- bip_init_network(x)
bip
n <- ggnetwork(bip)
p <- ggplot(n)
n
print(p)
x
bip <- network::network(x, matrix.type = "bipartite");
bip
p
col= c("actor"= "grey80", "event"= "gold2")
ggnet2(bip,
color= "mode", palette= col,
label = TRUE, label.size=3,
layout.exp = 0.25)        # Using layout.exp because of long labels
bip<- bip_init_network(x)
ggnet2(bip,
color= "mode", palette= col,
label = TRUE, label.size=3,
layout.exp = 0.25)        # Using layout.exp because of long labels
ggnet2
bip
x
x <- if(x< 0.25) 0
net = rgraph(10, mode = "graph", tprob = 0.5)
net
?if
)
x[x < 0.25] <- 0
bip <- network::network(x, matrix.type = "bipartite");
x
x <- matrix(rgamma(8*8, shape = 1), nrow = 8, ncol = 8);
x
x[x < 0.25] <- 0
x
bip <- network::network(x, matrix.type = "bipartite");
n <- ggnetwork(bip)
p <- ggplot(n)
bip <- network::network(x, matrix.type = "bipartite");
ggnet2(bip,
color= "mode", palette= col,
label = TRUE, label.size=3,
layout.exp = 0.25)        # Using layout.exp because of long labels
dim(x)
bip= data.frame(P1= c(1, 12, 6, 0),
P2= c(1, 0, 4, 0),
P3= c(1, 7, 3, 12),
P4= c(0, 8, 3, 5),
row.names= letters[1:4])
x= data.frame(P1= c(1, 12, 6, 0),
P2= c(1, 0, 4, 0),
P3= c(1, 7, 3, 12),
P4= c(0, 8, 3, 5),
row.names= letters[1:4])
bip <- network::network(x, matrix.type = "bipartite");
n <- ggnetwork(bip)
p <- ggplot(n)
print(p)
col= c("actor"= "grey80", "event"= "gold2")
ggnet2(bip,
color= "mode", palette= col,
label = TRUE, label.size=3,
layout.exp = 0.25)        # Using layout.exp because of long labels
p<- ggnet2(nch.net,
shape= "mode", label= T,
color= "mode", palette= col,
edge.size= bip_edgewt(nch, 5), edge.alpha= 0.25)
p
bip= data.frame(P1= c(1, 12, 6, 0),
P2= c(1, 0, 4, 0),
P3= c(1, 7, 3, 12),
P3= c(0, 10, 6, 2),
row.names= letters[1:4])
bip
bip= data.frame(P1= c(1, 12, 6, 0),
P2= c(1, 0, 4, 0),
P3= c(1, 7, 3, 12),
P4= c(0, 10, 6, 2),
row.names= letters[1:4])
bip
bip <- network::network(x, matrix.type = "bipartite"); p <- ggnet2(bip); print(p)
